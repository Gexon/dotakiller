Огромное спасибо моему дрожайшему другу Andrey Lesnikov@ozkriff
Благодаря ему я узнал что, у меня есть и речка и семья и тропинка и лесок в поле чистый колосок
http://not-fl3.github.io/tinyecs/tinyecs/struct.Entity.html
http://not-fl3.github.io/tinyecs/tinyecs/struct.EntityManager.html#method.try_get_entity

и вообще стой, зачем тебе карта с монстрами и травой, когда у тебя компонентная система?
заведи три компонента, допустим "позиция", "монстр", "трава"
что бы создать монстра - создавай сущность с компонентами "позиция" + "монстр"

что бы создать объект травы - создавай сущность с компонентами "позиция" + "трава"
в этом жеж весь смысл компонентов
в идеале потом компонент "монстр" тоже надо разбить на более абстрактные компоненты

//-------------------------------------------------------------------------------------------
Ilya Bogdanov@vitvakatu
Не проще проверять сущности на расстояние?
Gexon@Gexon
ну расстояние я смогу проверить, а как же положение в пространстве проверю?
Например перед ним находится другой монстр, как это определить?
Или расположение строений относительно друг друга?
Ilya Bogdanov@vitvakatu
Как это определишь в случае с картой?
Gexon@Gexon
есть направление у каждого монстра, просто проверю что в клетках что по курсу)
speaker73@speaker73
так просто бери координаты монстра,
и делай тоже самое, просто перебирая других монсров или сущностей. сравнивая их коррдинаты

//--------------------------------------------------------
Andrey Lesnikov@ozkriff
По пальмам:
ты можешь держать дополнительные hashmap'ы для оптимизации - HashMap<(i32, i32), Id>
по позиции получать Id сущности в ecs (или знание что такой нет)
так будут достоинства обоих подходов

speaker73@speaker73
pub monsters: HashMap<(i32, i32), Monster>
hash.insert( (1,1), ObjectID);
vikings.insert((1,2),
Viking::new("Einar", "Norway"))
let mut grass= HashMap::new();
grass.insert( (1,0), 25);
а если хочешь достать
grass.get( (1,0) );
https://doc.rust-lang.org/std/collections/struct.HashMap.html

Берешь координаты монтра
Palms.get((monstr.x,monstr.y))
Если получил ид
Значит монстр на клетке с пальмой

let mut map = HashMap::new();
map.insert(1, "a");
assert_eq!(map.contains_key(&1), true);
assert_eq!(map.contains_key(&2), false);

let mut map = HashMap::new();
map.insert(1, "a");
assert_eq!(map.remove(&1), Some("a"));
assert_eq!(map.remove(&1), None);